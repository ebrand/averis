// <auto-generated />
using System;
using Commerce.Services.Ecommerce.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Commerce.Services.Ecommerce.Api.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20250827170402_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("averis_ecomm")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Commerce.Services.Ecommerce.Api.Models.EcommerceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("display_order");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("slug");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("idx_ecommerce_categories_parent");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("idx_ecommerce_categories_slug");

                    b.ToTable("categories", "averis_ecomm");
                });

            modelBuilder.Entity("Commerce.Services.Ecommerce.Api.Models.EcommerceProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("BackorderAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("backorder_allowed");

                    b.Property<string>("Brand")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("brand");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasDefaultValue("system")
                        .HasColumnName("created_by");

                    b.Property<string>("DimensionUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValue("cm")
                        .HasColumnName("dimension_unit");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("display_name");

                    b.Property<string>("DocumentUrls")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}")
                        .HasColumnName("document_urls");

                    b.Property<DateOnly?>("EndOfLifeDate")
                        .HasColumnType("date")
                        .HasColumnName("end_of_life_date");

                    b.Property<DateOnly?>("ExpectedRestockDate")
                        .HasColumnType("date")
                        .HasColumnName("expected_restock_date");

                    b.Property<string[]>("Features")
                        .HasColumnType("text[]")
                        .HasColumnName("features");

                    b.Property<decimal?>("Height")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("height");

                    b.Property<string[]>("ImageUrls")
                        .HasColumnType("text[]")
                        .HasColumnName("image_urls");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<DateTime>("LastSyncAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_sync_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly?>("LaunchDate")
                        .HasColumnType("date")
                        .HasColumnName("launch_date");

                    b.Property<decimal?>("Length")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("length");

                    b.Property<string>("LongDescription")
                        .HasColumnType("text")
                        .HasColumnName("long_description");

                    b.Property<int>("LowStockThreshold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(10)
                        .HasColumnName("low_stock_threshold");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.Property<string>("PrimaryImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("primary_image_url");

                    b.Property<decimal>("RatingAverage")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3, 2)
                        .HasColumnType("numeric(3,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("rating_average");

                    b.Property<int>("RatingCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("rating_count");

                    b.Property<int>("ReviewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("review_count");

                    b.Property<string[]>("SearchKeywords")
                        .HasColumnType("text[]")
                        .HasColumnName("search_keywords");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("short_description");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sku");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("slug");

                    b.Property<string>("SourceSystem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("product-mdm")
                        .HasColumnName("source_system");

                    b.Property<string>("Specifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValue("{}")
                        .HasColumnName("specifications");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("active")
                        .HasColumnName("status");

                    b.Property<int>("StockQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("stock_quantity");

                    b.Property<string>("StockStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("in_stock")
                        .HasColumnName("stock_status");

                    b.Property<int>("SyncVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("sync_version");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]")
                        .HasColumnName("tags");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasDefaultValue("system")
                        .HasColumnName("updated_by");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text")
                        .HasColumnName("video_url");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("view_count");

                    b.Property<decimal?>("Weight")
                        .HasPrecision(10, 3)
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("weight");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValue("kg")
                        .HasColumnName("weight_unit");

                    b.Property<decimal?>("Width")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("width");

                    b.HasKey("Id");

                    b.HasIndex("Brand")
                        .HasDatabaseName("idx_ecommerce_products_brand");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("idx_ecommerce_products_category");

                    b.HasIndex("RatingAverage")
                        .HasDatabaseName("idx_ecommerce_products_rating");

                    b.HasIndex("Sku")
                        .IsUnique()
                        .HasDatabaseName("products_sku_key");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("products_slug_key");

                    b.HasIndex("Status")
                        .HasDatabaseName("idx_ecommerce_products_status");

                    b.HasIndex("StockStatus")
                        .HasDatabaseName("idx_ecommerce_products_stock_status");

                    b.ToTable("products", "averis_ecomm");
                });

            modelBuilder.Entity("Commerce.Services.Ecommerce.Api.Models.EcommerceCategory", b =>
                {
                    b.HasOne("Commerce.Services.Ecommerce.Api.Models.EcommerceCategory", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Commerce.Services.Ecommerce.Api.Models.EcommerceProduct", b =>
                {
                    b.HasOne("Commerce.Services.Ecommerce.Api.Models.EcommerceCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Commerce.Services.Ecommerce.Api.Models.EcommerceCategory", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
